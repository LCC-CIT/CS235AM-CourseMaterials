{"Name":"Xamarin.Mobile","Id":18,"Alias":"xamarin.mobile","Description":"Xamarin.Mobile is an API for accessing common platform features, such as\nreading the user\u0027s address book and using the camera, across iOS,\nAndroid, and Windows Phone.\n\nThe goal of Xamarin.Mobile is to decrease the amount of\nplatform-specific code needed to perform common tasks in multiplatform\napps, making development simpler and faster.\n\n## Examples\n\nTo access the address book:\n\n```csharp\nvar book = new AddressBook ();\r\nforeach (Contact contact in book.OrderBy (c =\u003e c.LastName)) {\n\tConsole.WriteLine (\"{0} {1}\", contact.FirstName, contact.LastName);\n}\n```\n\nTo get the user\u0027s location:\n\n```csharp\nvar locator = new Geolocator { DesiredAccuracy = 50 };\r\nlocator.GetPositionAsync (timeout: 10000).ContinueWith (t =\u003e {\r\n\tConsole.WriteLine (\"Position Status: {0}\", t.Result.Timestamp);\r\n\tConsole.WriteLine (\"Position Latitude: {0}\", t.Result.Latitude);\r\n\tConsole.WriteLine (\"Position Longitude: {0}\", t.Result.Longitude);\r\n});\n```\n\nTo take a photo:\n\n```csharp\nvar picker = new MediaPicker ();\r\npicker.TakePhotoAsync (new StoreCameraMediaOptions {\r\n\tName = \"test.jpg\",\r\n\tDirectory = \"MediaPickerSample\"\r\n}).ContinueWith (t =\u003e {\n\tif (t.IsCanceled) {\n\t\tConsole.WriteLine (\"User canceled\");\n\t\treturn;\n\t}\n\tConsole.WriteLine (t.Result.Path);\r\n});\n```\n","Version":"0.6.1","Summary":"Xamarin.Mobile is a library that exposes a single set of APIs for accessing common mobile device functionality across iOS, Android and Windows platforms.","QuickStart":"Xamarin.Mobile is an API for accessing common platform features, such as\r\nreading the user\u0027s address book and using the camera, across iOS,\r\nAndroid, and Windows Phone.\r\n\r\n## Examples\r\n\r\nTo access the address book:\r\n\r\n```csharp\r\nusing Xamarin.Contacts;\r\n...\r\n\r\nvar book = new AddressBook ();\r\nforeach (Contact contact in book.OrderBy (c =\u003e c.LastName)) {\r\n\tConsole.WriteLine (\"{0} {1}\", contact.FirstName, contact.LastName);\r\n}\r\n```\r\n\r\nTo get the user\u0027s location:\r\n\r\n```csharp\r\nusing Xamarin.Geolocation;\r\n...\r\n\r\nvar locator = new Geolocator { DesiredAccuracy = 50 };\r\nlocator.GetPositionAsync (timeout: 10000).ContinueWith (t =\u003e {\r\n\tConsole.WriteLine (\"Position Status: {0}\", t.Result.Timestamp);\r\n\tConsole.WriteLine (\"Position Latitude: {0}\", t.Result.Latitude);\r\n\tConsole.WriteLine (\"Position Longitude: {0}\", t.Result.Longitude);\r\n});\r\n```\r\n\r\nTo take a photo:\r\n\r\n```csharp\r\nusing Xamarin.Media;\r\n...\r\n\r\nvar picker = new MediaPicker ();\r\npicker.TakePhotoAsync (new StoreCameraMediaOptions {\r\n\tName = \"test.jpg\",\r\n\tDirectory = \"MediaPickerSample\"\r\n}).ContinueWith (t =\u003e {\r\n\tif (t.IsCanceled) {\r\n\t\tConsole.WriteLine (\"User canceled\");\r\n\t\treturn;\r\n\t}\r\n\tConsole.WriteLine (t.Result.Path);\r\n});\r\n```\r\n","Hash":"62f8eff9e5b74b9e69e1e77f0f61f693","TargetPlatforms":["ios","android","winphone-7.0","winphone-7.1","mobile"]}